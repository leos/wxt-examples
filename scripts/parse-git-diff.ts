export interface GitDiffChange {
  diff?: string; // Represents the diff metadata line (e.g., "@@ -1,4 +1,6 @@")
  code?: string; // Represents a line of code that has been added/removed/modified
}

export interface GitDiffFile {
  oldPath: string; // The previous file path (if it exists)
  newPath: string; // The new file path
  changes: GitDiffChange[]; // An array of changes in the file
  newFileMode?: string; // The file mode if the file is new
  deletedFileMode?: string; // The file mode if the file is deleted
  index?: string; // The index line from the diff
}

// Generated by ChatGPT
export function parseGitDiff(diffText): GitDiffFile[] {
  const diffLines = diffText.split('\n');
  const fileDiffs = [];
  let currentFile = null;

  diffLines.forEach((line) => {
    if (line.startsWith('diff --git a/')) {
      if (currentFile) {
        fileDiffs.push(currentFile);
      }

      const paths = line.split(' ').slice(2);
      const oldPath = paths[0].substring(2); // Removing 'a/'
      const newPath = paths[1].substring(2); // Removing 'b/'

      currentFile = {
        oldPath: oldPath,
        newPath: newPath,
        changes: [],
        newFileMode: null,
        deletedFileMode: null,
        index: null,
      };
    } else if (line.startsWith('new file mode')) {
      currentFile.newFileMode = line.split(' ')[3];
    } else if (line.startsWith('deleted file mode')) {
      currentFile.deletedFileMode = line.split(' ')[3];
    } else if (line.startsWith('index')) {
      currentFile.index = line.split(' ')[1];
    } else if (line.startsWith('@@')) {
      currentFile.changes.push({ diff: line });
    } else if (
      currentFile &&
      (line.startsWith('+') || line.startsWith('-') || line.startsWith(' '))
    ) {
      currentFile.changes.push({ code: line });
    }
  });

  if (currentFile) {
    fileDiffs.push(currentFile);
  }

  return fileDiffs;
}
